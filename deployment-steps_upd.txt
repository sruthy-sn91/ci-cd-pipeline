1. Login to AWS console.

2. Create IAM user for deployment if required

	with specific access
	1. EC2 access : It is virtual machine

	2. ECR: Elastic Container registry
	To save your docker image in aws

	Description: About the deployment

	1. Build docker image of the source code
	2. Push your docker image to ECR
	3. Launch Your EC2 
	4. Pull Your image from ECR in EC2
	5. Lauch your docker image in EC2

	Policy:
	1. AmazonEC2ContainerRegistryFullAccess
	2. AmazonEC2FullAccess

	
3. Create ECR repo to store/save docker image
	- Save the URI:140023380650.dkr.ecr.us-east-1.amazonaws.com/cicdapp
		474668382138.dkr.ecr.us-east-1.amazonaws.com/cicdapp
	
4. Create EC2 machine (Ubuntu) 

5. Open EC2 and Install docker in EC2 Machine:
	
	
	#optinal
	sudo apt-get update -y
	sudo apt-get upgrade
	
	#required
	curl -fsSL https://get.docker.com -o get-docker.sh
	sudo sh get-docker.sh
	sudo usermod -aG docker ubuntu
	newgrp docker
	
6. Configure EC2 as self-hosted runner:
    Create a github project repo with title and enable readme file
    clone it in your project folder "git clone https://github.com/tkseneee/ci-cd-pipe.git"

    setting>actions>runner>new self hosted runner> choose os> 
    then run command one by one

    It will display 'GITHUB ACTIONS" on the screen
    
    Enter the name of the runner group to add this runnin to: just press enter
    Enter the name of runner : self-hosted
    Enter any additional labels: press enter
    Enter name of work folder:press enter

    ./run.sh


7. Setup github secrets:

   Go to github repo--> settings--> Secret&Variables--> Actions

   Name*  AWS_ACCESS_KEY_ID     Secret*  AKIASBGQLXXXXXXXXX

    Name*  AWS_SECRET_ACCESS_KEY  Secret*

    Name* AWS_REGION   Secret* us-east-1

    AWS_ECR_LOGIN_URI = 474668382138.dkr.ecr.us-east-1.amazonaws.com

    ECR_REPOSITORY_NAME = 


8.Make sure yaml file is properly written under .github\workflows

9. Go to vs code project folder terminal

  >> git status
  git add .
  git commit -m "initial7"
  git push origin main
